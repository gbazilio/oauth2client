{
  "name": "Android OAuth2 Client",
  "tagline": "Android OAuth2 Client with embedded WebView for authorization url.",
  "body": "Custom OAuth2 Android Client\r\n==============================\r\n\r\nThe library was developed to fit specific needs of a client, which is to complete the OAuth Authorization Code Flow using Github as the OAuth2 Provider.\r\n\r\n# Using the library\r\n\r\nGet an instance of a provider's client:\r\n```java\r\nOAuth2Client oauthClient = OAuth2ClientFactory.newInstance(OAuth2ClientFactory.Provider.ENVATO);\r\n```\r\n\r\nBuild the dialog fragment to show the login/authorization screen:\r\n```java\r\nOAuth2LoginFragment oAuth2LoginFragment = OAuth2LoginFragment.newInstance(oauthClient);\r\n```\r\n\r\nSet a listener responsible for intercepting the access token when appropriate:\r\n```java\r\noAuth2LoginFragment.setOnAccessTokenRequestedListener(new AccessTokenRequested() {\r\n    @Override\r\n    public void onAccessTokenRequested(Token token) {\r\n\t\tLog.v(\"Provider\", token.getProvider());\r\n        Log.v(\"AccessToken\", token.getAccessToken());        \r\n    }\r\n});\r\n```\r\n\r\nBe sure to make the fragment visible whenever you want (e.g. on clicking a button):\r\n```java\r\nFragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();\r\nfragmentTransaction.addToBackStack(null);\r\n\r\noAuth2LoginFragment.show(fragmentTransaction, \"oauth2_dialog\");\r\n```\r\n\r\n# OAuth2 Clients\r\n\r\nImplement the base class `com.gbazilio.oauth2client.oauth2.clients.interfaces.OAuth2Client` if more clients are needed.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}